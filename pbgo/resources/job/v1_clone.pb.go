// Code generated by protoc-gen-clone. DO NOT EDIT.

package job_pb

func (z *V1_Pipeline) Clone() *V1_Pipeline {
	if z == nil {
		return nil
	}
	zz := &V1_Pipeline{}
	zz.Id = z.Id
	zz.CreatedAt = z.CreatedAt
	zz.UpdatedAt = z.UpdatedAt
	zz.TeamID = z.TeamID
	zz.ProjectID = z.ProjectID
	zz.OwnerID = z.OwnerID
	zz.Remarks = z.Remarks
	zz.Settings = z.Settings.Clone()
	zz.Source = z.Source
	zz0 := make(map[string]string)
	for k, v := range z.Arguments {
		zz0[k] = v
	}
	zz.Arguments = zz0
	zz1 := make(map[string]string)
	for k, v := range z.Environments {
		zz1[k] = v
	}
	zz.Environments = zz1
	return zz
}
func (z *V1_Job) Clone() *V1_Job {
	if z == nil {
		return nil
	}
	zz := &V1_Job{}
	zz.Id = z.Id
	zz.CreatedAt = z.CreatedAt
	zz.UpdatedAt = z.UpdatedAt
	zz.TeamID = z.TeamID
	zz.ProjectID = z.ProjectID
	zz.OwnerID = z.OwnerID
	zz.PipelineID = z.PipelineID
	zz.AgentID = z.AgentID
	zz.Status = z.Status
	zz.Settings = z.Settings.Clone()
	zz.Source = z.Source
	zz0 := make(map[string]string)
	for k, v := range z.Arguments {
		zz0[k] = v
	}
	zz.Arguments = zz0
	zz1 := make(map[string]string)
	for k, v := range z.Environments {
		zz1[k] = v
	}
	zz.Environments = zz1
	zz2 := make([]*V1_StatusHistory, len(z.StatusHistories))
	for i := range z.StatusHistories {
		zz2[i] = z.StatusHistories[i].Clone()
	}
	zz.StatusHistories = zz2
	return zz
}
func (z *V1_StatusHistory) Clone() *V1_StatusHistory {
	if z == nil {
		return nil
	}
	zz := &V1_StatusHistory{}
	zz.FromStatus = z.FromStatus
	zz.ToStatus = z.ToStatus
	zz.CreatedAt = z.CreatedAt
	return zz
}
func (z *V1_Settings) Clone() *V1_Settings {
	if z == nil {
		return nil
	}
	zz := &V1_Settings{}
	zz.Concurrency = z.Concurrency
	zz.Total = z.Total
	zz.StopAt = z.StopAt
	zz.RunSeconds = z.RunSeconds
	return zz
}
func (z *V1) Clone() *V1 {
	if z == nil {
		return nil
	}
	zz := &V1{}
	return zz
}
